services:
  backend:
    build:
      context: ../..
      dockerfile: infra/docker/backend.Dockerfile
    container_name: news-backend
    environment:
      ENV: prod
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ainews}
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    volumes:
      - ../../config.toml:/app/config.toml:ro
      - ./hf_cache:/cache/hf
    depends_on:
      - db
    ports:
      - "8000:8000"
    restart: unless-stopped

  frontend:
    build:
      context: ../..
      dockerfile: infra/docker/frontend.Dockerfile
    container_name: news-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    environment:
      BACKEND_URL: ${BACKEND_URL:-http://backend:8000}
      BACKEND_HOST: ${BACKEND_HOST:-backend}
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: news-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ainews}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  pgdata:
